name: qna-backend ci and push image to dockerhub and deploy on azure
env:
  AZURE_WEBAPP_NAME: wa-qna
on:
  push:
    paths-ignore:
      - "qna-frontend/**"
    branches: ["master"]
  pull_request:
    paths-ignore:
      - "qna-frontend/**"
    branches: ["master"]

jobs:
  build_and_push:
    name: qna-ci
    environment: dockerhub
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Make gradlew executable
        run: chmod +x ./gradlew
        working-directory: ./qna-backend

      - name: Build with Gradle Wrapper
        run: ./gradlew clean build
        working-directory: ./qna-backend

      - name: Build docker image
        env:
          MONGO_USER: ${{ secrets.MONGO_USER }}
          MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
          MONGO_CLUSTER: ${{ secrets.MONGO_CLUSTER }}
          MONGO_DB: ${{ secrets.MONGO_DB}}
        run: docker build --build-arg MONGO_CONN=-Dspring.data.mongodb.uri=mongodb+srv://${{ env.MONGO_USER}}:${{ env.MONGO_PASSWORD}}@${{ env.MONGO_CLUSTER}}/${{ env.MONGO_DB}} -t yellowhatpro/qna .
        working-directory: ./qna-backend

      - name: Login to dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push image to dockerhub
        run: docker push yellowhatpro/qna
        working-directory: ./qna-backend

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: "yellowhatpro/qna"
